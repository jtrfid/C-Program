/***************************************
 问题描述：请写一个程序，给出指定整数范围[a，b]内的所有完数，0 < a < b < 10000。
 一个数如果恰好等于除它本身外的所有因子之和，这个数就称为"完数"。例如6是完数，因为6=1＋2＋3
 
 输入说明：只有一组数据，即一行上的两个整数a和b，a和b之间用空格分隔
  
 输出说明：输出[a，b]内的所有完数，每个数字占一行
 
 输入样例：1 10
 
 输出样例: 6 
 ****************************************/ 
#include <stdio.h>
/**********************************************
 采用两层循环方案
 (1) 外层循环使整数i递增，完成区间[n1,n2]区间的完数计算 
 (2) 内层循环, 累加整数i的各因子
 (3) 判断整数i是否是完数, 如果是，输出之 
 **********************************************/ 
int main1()
{
    int i,j,n1,n2,sum = 0;
    scanf("%d%d",&n1,&n2);
    for(i = n1; i <= n2; i++) // 外层循环使整数i递增，完成区间[n1,n2]区间的完数计算 
	{
		if(i == 1) continue; // 避免输出1，1不是完数 
		// i不等于1, 计算各因子 
		sum = 1;   // 不要忘记, 内层循环前sum的初始化。1总是一个整数的合法因子 
		for(j = 2; j < i; j++) // 累加整数i的所有因子 
    	{
    		if(i%j == 0) sum += j; // 如果j是i的因子，累加之。 
		}
		if(sum == i) printf("%d\n",i); // 如果i是完数，输出之。 
	} 
    
	return 0;	
}

/**********************************************
 采用一重循环 + 调用函数方案
 (1) 一重循环使整数i递增，函数compute调用，完成区间[n1,n2]区间的完数计算 
 (2) 定义函数compute, 判断整数参数是否是完数, 如果是，返回它, 否则返回-1 
 **********************************************/ 
 
// 定义函数compute, 判断整数参数a是否是完数, 如果是，返回a, 否则返回-1 
int compute(int a)
{
    int i,s=1; // s用于存储a的各因子累加值, 1总是一个整数的合法因子 
	if(a == 1) 
	{
		return -1; // 1不是完数
	}
	// a不为1, 计算各因子 
	for(i = 2; i < a; i++) // 累加整数a的所有因子 
    {
    	if(a%i == 0) s += i; // 如果i是a的因子，累加之。 
	}
	if(s == a) 
	{
		return a; // 如果a是完数，返回之。
	} 
	// 如果程序执行到此处必然不是完数 
	return -1;
}

// 另一种方式定义函数compute, 判断整数参数a是否是完数, 如果是，返回a, 否则返回-1 
// 一条return函数返回语句 
int compute1(int a)
{
    int i,s=1; // s用于存储a的各因子累加值, 1总是一个整数的合法因子 
    int ret=-1; // 用于返回值，默认为-1 
	
	for(i = 2; i < a; i++) // 累加整数a的所有因子 
    {
    	if(a%i == 0) s += i; // 如果i是a的因子，累加之。 
	}
	if(s == a && a!=1) // 如果a是完数，返回值是本身。(a!=1) 排除1不是完数的情况 
	{
		ret = a; 
	} 
	else // a不是完数 
	{
		ret = -1;
	}
	return ret;
}

int main()
{
    int i,n1,n2;
    scanf("%d%d",&n1,&n2);
    for(i = n1; i <= n2; i++) // 调用函数compute，完成区间[n1,n2]区间的完数计算 
	{
		
		//if(compute(i)!=-1) printf("%d\n",i); // 如果i是完数，输出之。 
		// 测试函数compute1的调用 
		if(compute1(i)!=-1) printf("%d\n",i); // 如果i是完数，输出之。 
	} 
    
	return 0;	
}
