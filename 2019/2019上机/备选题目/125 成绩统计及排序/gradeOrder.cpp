/*****************************************************************	
	试题编号	125
	试题名称	成绩统计及排序
	时间限制:	1 秒
	内存限制:	256MB
	问题描述	
	问题描述
	请写一个程序，输入N名学生的百分制分数，统计并输出位于分数段[a, b]的人数及该分数段内从小到大排列的所有分数。
	输入说明
	输入数据分两行：第一个为3个整数，分别表示学生数N（1≤N≤200），分数段的下界a和上界b（0≤a≤b≤100）；
	接下来的一行为N个整数，分别表示N名学生的百分制成绩。整数之间用空格分隔。
	输出说明
	输出分2行：第1行输出一个整数，表示位于分数段[a, b]的人数M，换行；
	第2行为M个从小到大排列的整数，整数之间用1个空格分隔，最后换行。
	输入样例
	10 66 85 
	64 59 35 66 3 87 15 84 75 94 
	输出样例
	3 
	66 75 84 
	提示信息
**********************************************************************/
#include <stdio.h>

// 排序函数(升序) 
void order(int a[],int n)
{ 
	int i,j,t;
	// 冒泡排序
	for(j = 1; j <= n-1; j++) 
		for(i = 0; i < n - j; i++)
			if (a[i] > a[i+1]) 
			{ t = a[i]; a[i] = a[i+1]; a[i+1] = t; }
}

int main()
{
	int i,N,M,a,b,grade[200],g;
	scanf("%d%d%d",&N,&a,&b);
	for(i = 0,M = 0;i < N;i++)
	{
		scanf("%d",&g);
		if(g >=a && g <= b) grade[M++] = g; // 符合[a,b]中的成绩 
	}
	printf("%d\n",M);
	order(grade,M); // 排序(升序)  
	for(i = 0;i < M;i++) 
	{
		if(i == M - 1) printf("%d\n",grade[i]);
		else printf("%d ",grade[i]); 
	} 
	return 0;
}
